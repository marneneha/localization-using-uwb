<launch>

  <!-- defines name of the namespace of the drone -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="RUN_TYPE" default="$(env RUN_TYPE)" />
  <!--arg name="frame_id" value="gps_origin" /-->

  <arg name="simulation" default="true" />

  <!-- will it run using GNU debugger? -->
  <arg name="DEBUG" default="false" />
  <arg unless="$(arg DEBUG)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg DEBUG)" name="launch_prefix_debug" value="debug_roslaunch"/>
  <arg name="custom_config_uav_names" default="" />
  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_uwb_start_manager" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <!-- Namespace -->
  <group ns="$(arg UAV_NAME)">

    <!-- neha1 nodelet -->
    <node pkg="nodelet" type="nodelet" name="localization" args="$(arg nodelet) localization/uwb_start $(arg nodelet_manager)"  output="screen">
// $(arg launch_prefix_debug)  gdb -ex run --args
      <!-- Parameters loaded from launch file -->
      <param name="uav_name" type="string" value="$(arg UAV_NAME)" />
      <param name="simulation" value="$(eval arg('RUN_TYPE') == 'simulation')" />
      <rosparam  if="$(eval arg('RUN_TYPE') == 'uav')" name = "network/robot_names"  file="$(find localization)/config/uav_names.yaml" />
      <param name="frame_id" value=" gps_origin" />
      <rosparam if="$(eval not arg('custom_config_uav_names') == '')" ns="localization" file="$(arg custom_config_uav_names)" />

      <!-- ROS parameters config file -->
      

      <!-- Subscribers -->
      <remap from="~odom_uav_in" to="odometry/odom_main" />
      <remap from="~tracker_diagnostics_in" to="control_manager/mpc_tracker/diagnostics" />
      <remap from="~odom_gt_in" to="ground_truth" />

      <!-- Publishers -->
      <remap from="~reference_out" to="control_manager/reference" />

      <!-- Service servers -->

      <!-- Service clients -->
      <remap from="~land_out" to="uav_manager/land" />
    </node>

  </group>

</launch>
